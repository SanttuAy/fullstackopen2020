{"version":3,"sources":["services/connections.js","components/Naytettavat.js","components/Tallennus.js","components/PersonForm.js","components/Ilmoitus.js","components/Virhe.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObject","post","id","put","delete","Naytettavat","props","tasmaavat","persons","filter","person","name","toLocaleLowerCase","includes","filtteri","connectionsToShow","showAll","map","connection","i","key","number","onClick","kysymys","window","confirm","connectionService","returnedConnections","setPersons","alkio","setViesti","setTimeout","catch","error","console","log","deletionOf","Tallennus","tarkistus","type","PersonForm","addNewConnection","newName","handleNameChange","newNumber","handleNumberChange","onSubmit","value","onChange","Ilmoitus","viesti","varoitus","className","Virhe","style","color","background","fontSize","borderStyle","borderRadius","padding","marginBottom","App","useState","setNewName","isAlready","setIsAlready","setNewNumber","setShowAll","setFiltteri","paivitettava","setPaivitettava","setVaroitus","useEffect","initialConnections","event","target","preventDefault","connectionObject","paivitetaanko","returnedConnection","concat","p","henkilo","etsitty","find","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f47ddd37.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseUrl, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst poisto = (id) => {\r\n  return axios.delete(`${baseUrl}/${id}`)\r\n}\r\n\r\nexport default { getAll, create, update, poisto }","import React from 'react'\r\nimport connectionService from '../services/connections'\r\n\r\nconst Naytettavat = (props) => {\r\n    var tasmaavat = props.persons.filter(function(person) {    \r\n      return person.name.toLocaleLowerCase().includes(props.filtteri.toLocaleLowerCase())\r\n    })\r\n    const connectionsToShow = props.showAll\r\n      ? props.persons\r\n      : tasmaavat\r\n\r\n    const deletionOf = (id, name) => {\r\n      const kysymys = `Poistetaanko ${name} ?`\r\n      const varmistus = window.confirm(kysymys)\r\n      varmistus\r\n      ?\r\n      connectionService\r\n      .poisto(id)\r\n      .then(returnedConnections => { \r\n      //console.log(returnedConnections)\r\n      props.setPersons(props.persons.filter(alkio => alkio.id !==id))\r\n      props.setViesti(\r\n        `${name} poistettiin luettelosta`\r\n      )\r\n      setTimeout(() => {\r\n        props.setViesti(null)\r\n      }, 5000)\r\n    })\r\n      .catch(error => {\r\n        console.log('Poisto ei onnistu!')\r\n      })\r\n      : console.log('poistoa ei tehty')\r\n    }\r\n\r\n    return (\r\n      <ul>\r\n        {connectionsToShow.map((connection, i) =>\r\n        <li key = {i}> {connection.name} {connection.number}\r\n        <button onClick={() => deletionOf(connection.id, connection.name)}>delete</button>\r\n        </li>\r\n        )}\r\n      </ul>\r\n    )\r\n  }\r\n\r\n  export default Naytettavat\r\n\r\n","import React from 'react'\r\n\r\nconst Tallennus = (props) => {\r\n       return (\r\n       <div>\r\n        <button onClick= {props.tarkistus} type=\"submit\" >add</button>\r\n      </div>\r\n      )\r\n    \r\n}\r\n\r\n    export default Tallennus","import React from 'react'\r\nimport Tallennus from './Tallennus'\r\n\r\n\r\nconst PersonForm = (props) => {\r\n    const addNewConnection = props.addNewConnection\r\n    const newName = props.newName\r\n    const handleNameChange = props.handleNameChange\r\n    const newNumber = props.newNumber\r\n    const handleNumberChange = props.handleNumberChange\r\n    const tarkistus = props.tarkistus\r\n\r\n    return (\r\n    <form onSubmit={addNewConnection}>\r\n      <div>\r\n          name: <input\r\n            value={newName}\r\n            onChange={handleNameChange} \r\n        />\r\n      </div>\r\n      <div>\r\n          number: <input\r\n            value={newNumber}\r\n            onChange={handleNumberChange}\r\n        />\r\n      </div>\r\n      <Tallennus tarkistus={tarkistus}  />\r\n      </form>\r\n    )\r\n}\r\n\r\nexport default PersonForm","import React from 'react'\r\n\r\nconst Ilmoitus = ({ viesti, varoitus }) => {\r\n    if (viesti === null || varoitus !== null) {\r\n      return null\r\n    }\r\n  \r\n    return (\r\n      <div className=\"ilmo\">\r\n        {viesti}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  export default Ilmoitus","import React from 'react'\r\n\r\nconst Virhe = ({ varoitus }) => {\r\n    if (varoitus === null) {\r\n      return null\r\n    }\r\n  \r\n    const varoitusStyle = {\r\n        color: 'red',\r\n        background: 'lightgrey',\r\n        fontSize: 30,\r\n        borderStyle: 'solid',\r\n        borderRadius: 5,\r\n        padding: 10,\r\n        marginBottom: 10\r\n    }\r\n\r\n    return (\r\n      <div style={varoitusStyle}>\r\n        {varoitus}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  export default Virhe\r\n\r\n\r\n\r\n","import React, { useState, useEffect } from 'react'\r\nimport './index.css'\r\nimport Naytettavat from './components/Naytettavat'\r\nimport PersonForm from './components/PersonForm'\r\nimport connectionService from './services/connections'\r\nimport Ilmoitus from './components/Ilmoitus'\r\nimport Virhe from './components/Virhe'\r\n\r\n\r\nconst App = () => {\r\n  const [ persons, setPersons] = useState([  //kovakoodatut testejä varten, huomaa numero nimissä palvelimella oleviin nähden\r\n    { name: 'Arto Hellas1', number: '040-1231244' }, \r\n    { name: 'Ada Lovelace1', number: '39-44-5323523' },\r\n    { name: 'Dan Abramov1', number: '12-43-234345' },\r\n    { name: 'Mary Poppendieck1', number: '39-23-6423122' }\r\n  ]) \r\n  const [ newName, setNewName ] = useState('') // nimisyötekentän arvo\r\n  const [ isAlready, setIsAlready ] = useState(false) //onko nimi jo luettelossa\r\n  const [ newNumber, setNewNumber ] = useState('') // numerosyötekentän arvo\r\n  const [ showAll, setShowAll ] = useState(true) // näytetäänkö kaikki vai filtterillä\r\n  const [ filtteri, setFiltteri ] = useState('') // filtteri jolla haetaan näytettävät\r\n  const [ paivitettava, setPaivitettava] = useState(-1) //päivitettävän id\r\n  const [ viesti, setViesti] = useState(null) //viesti suoritetusta toimenpiteestä \r\n  const [ varoitus, setVaroitus ] = useState(null) // varoituksen teksti\r\n  \r\n  useEffect(() => {\r\n    connectionService\r\n      .getAll()\r\n      .then(initialConnections => {\r\n        setPersons(initialConnections)\r\n      })\r\n    }, [])\r\n\r\n  const addNewConnection = (event) => {\r\n    event.preventDefault()\r\n    const connectionObject = {\r\n        name: newName,\r\n        number: newNumber\r\n    }\r\n\r\n    const paivitetaanko = \r\n    isAlready\r\n    ? window.confirm(`${newName} on jo lisätty luetteloon. Päivitetäänkö tiedot?`)\r\n    : \r\n    connectionService\r\n      .create(connectionObject)\r\n        .then(returnedConnection => {\r\n        setPersons(persons.concat(returnedConnection))\r\n        setViesti(\r\n          `Henkilö nimeltä ${newName} lisättiin puhelinluetteloon`\r\n        )\r\n        setTimeout(() => {\r\n          setViesti(null)\r\n        }, 5000)  \r\n        setNewName('')\r\n        setNewNumber('')\r\n      })\r\n      .catch(error => {\r\n        setVaroitus(`${error.response.data.error}`)\r\n        console.log(error.response.data)\r\n      })\r\n      if (isAlready) setIsAlready(false)\r\n\r\n//      console.log( paivitetaanko === true ) //TESTAUSTA\r\n\r\n    if (paivitetaanko === true) { //saa arvon true/false jos confirm-ikkunasta valitaan vastaava vaihtoehto\r\n      connectionService\r\n        .update(paivitettava, connectionObject)\r\n        .then(response => {\r\n          setPersons(persons.map(person => person.id !== paivitettava ? person : response))\r\n          setViesti(\r\n            `Henkilön ${newName} tiedot päivitettiin`\r\n          )\r\n          setTimeout(() => {\r\n            setViesti(null)\r\n          }, 5000)\r\n        })\r\n        .catch(error => { //kun henkilötieto on jo poistettu\r\n          setVaroitus(\r\n            `Henkilön ${newName} tiedot on jo poistettu puhelinluettelosta!`\r\n          )\r\n          setTimeout(() => {\r\n            setVaroitus(null)\r\n          }, 5000)\r\n          setPersons(persons.filter(p => p.name !== newName))\r\n        })\r\n        setNewName('')\r\n        setNewNumber('')\r\n    }   \r\n  }\r\n\r\n  const handleFilterChange = (event) => {\r\n    setFiltteri(event.target.value)\r\n    if (filtteri !== '') setShowAll(false)\r\n    else setShowAll(true)\r\n  }\r\n\r\n  const handleNumberChange = (event) => {\r\n    setNewNumber(event.target.value)\r\n  }\r\n\r\n  const handleNameChange = (event) => {\r\n    setNewName(event.target.value) //inputin syötekentän arvo\r\n    \r\n  }\r\n\r\n  const tarkistus = () => {\r\n    var nimet = persons.map((henkilo) => henkilo.name.toLocaleLowerCase())\r\n    if (nimet.includes(newName.toLocaleLowerCase())) {\r\n      setIsAlready(true)\r\n      const etsitty = persons.find( person => person.name.toLocaleLowerCase() === newName.toLocaleLowerCase() ) \r\n      setPaivitettava(etsitty.id) \r\n    }\r\n  } \r\n  \r\n\r\n  return ( \r\n    <div>\r\n      <h2>Phonebook</h2>\r\n      <Ilmoitus viesti={viesti} persons = {persons} varoitus={varoitus} />\r\n      <Virhe varoitus = {varoitus} persons = {persons} />\r\n      <div>\r\n      filter show with <input\r\n        value={filtteri}\r\n        onChange={handleFilterChange} \r\n        />\r\n      </div>\r\n      <h3>add a new</h3>\r\n      <PersonForm addNewConnection={addNewConnection} newName={newName} handleNameChange={handleNameChange} \r\n      newNumber={newNumber} handleNumberChange={handleNumberChange} tarkistus={tarkistus} />\r\n      <h3>Numbers</h3>\r\n      <Naytettavat \r\n        persons={persons} \r\n        filtteri={filtteri} \r\n        showAll={showAll} \r\n        setPersons={setPersons}\r\n        viesti={viesti}\r\n        setViesti={setViesti}\r\n      />\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nexport default App\r\n","import React from 'react' \nimport ReactDOM from 'react-dom' \nimport App from './App'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}